# For when you really just want to serve some files over HTTP right now!
export extern miniserve [
  path?: path
  --verbose(-v)                         # Be verbose, includes emitting access logs, [env: MINISERVE_VERBOSE=]
  --index: path                         # The name of a directory index file to serve, like "index.html" [env: MINISERVE_INDEX=]
  --spa                                 # Activate SPA (Single Page Application) mode [env: MINISERVE_SPA=]
  --pretty-urls                         # Activate Pretty URLs mode [env: MINISERVE_PRETTY_URLS=]
  --port(-p): int                       # Port to use [env: MINISERVE_PORT=] [default: 8080]
  --interfaces(-i): string              # Interface to listen on [env: MINISERVE_INTERFACE=]
  --auth(-a): string                    # Set authentication [env: MINISERVE_AUTH=]
  --auth-file: string                   # Read authentication values from a file [env: MINISERVE_AUTH_FILE=]
  --route-prefix: string                # Use a specific route prefix [env: MINISERVE_ROUTE_PREFIX=]
  --random-route                        # Generate a random 6-hexdigit route [env: MINISERVE_RANDOM_ROUTE=]
  --no-symlinks(-P)                     # Hide symlinks in listing and prevent them from being followed [env: MINISERVE_NO_SYMLINKS=]
  --hidden(-H)                          # Show hidden files [env: MINISERVE_HIDDEN=]
  --default-sorting-method(-S): string  # Default sorting method for file list [env: MINISERVE_DEFAULT_SORTING_METHOD=] [default: name] [possible values: name, size, date]
  --default-sorting-order(-O): string   # Default sorting order for file list [env: MINISERVE_DEFAULT_SORTING_ORDER=] [default: desc] [possible values: asc, desc]
  --color-scheme(-c): string            # Default color scheme [env: MINISERVE_COLOR_SCHEME=] [default: squirrel] [possible values: squirrel, archlinux, zenburn, monokai]
  --color-scheme-dark(-d): string       # Default color scheme [env: MINISERVE_COLOR_SCHEME_DARK=] [default: archlinux] [possible values: squirrel, archlinux, zenburn, monokai]
  --qrcode(-q)                          # Enable QR code display [env: MINISERVE_QRCODE=]
  --upload-files(-u): path              # Enable file uploading (and optionally specify for which directory) [env: MINISERVE_ALLOWED_UPLOAD_DIR=]
  --mkdir(-U)                           # Enable creating directories [env: MINISERVE_MKDIR_ENABLED=]
  --media-type(-m): string              # Specify uploadable media types [env: MINISERVE_MEDIA_TYPE=] [possible values: image, audio, video]
  --raw-media-type(-M): string          # Directly specify the uploadable media type expression [env: MINISERVE_RAW_MEDIA_TYPE=]
  --overwrite-files(-o)                 # Enable overriding existing files during file upload [env: OVERWRITE_FILES=]
  --enable-tar(-r)                      # Enable uncompressed tar archive generation [env: MINISERVE_ENABLE_TAR=]
  --enable-tar-gz(-g)                   # Enable gz-compressed tar archive generation [env: MINISERVE_ENABLE_TAR_GZ=]
  --enable-zip(-z)                      # Enable zip archive generation [env: MINISERVE_ENABLE_ZIP=]
  --compress-response(-C)               # Compress response [env: MINISERVE_COMPRESS_RESPONSE=]
  --dirs-first(-D)                      # List directories first [env: MINISERVE_DIRS_FIRST=]
  --title(-t): string                   # Shown instead of host in page title and heading [env: MINISERVE_TITLE=]
  --header: string                      # Set custom header for responses [env: MINISERVE_HEADER=]
  --show-symlink-info(-l)               # Visualize symlinks in directory listing [env: MINISERVE_SHOW_SYMLINK_INFO=]
  --hide-version-footer(-F)             # Hide version footer [env: MINISERVE_HIDE_VERSION_FOOTER=]
  --hide-theme-selector                 # Hide theme selector [env: MINISERVE_HIDE_THEME_SELECTOR=]
  --show-wget-footer(-W)                # If enabled, display a wget command to recursively download the current directory [env: MINISERVE_SHOW_WGET_FOOTER=]
  --print-completions: string           # Generate completion file for a shell [possible values: bash, elvish, fish, powershell, zsh]
  --print-manpage                       # Generate man page
  --tls-cert: string                    # TLS certificate to use [env: MINISERVE_TLS_CERT=]
  --tls-key: string                     # TLS private key to use [env: MINISERVE_TLS_KEY=]
  --readme                              # Enable README.md rendering in directories [env: MINISERVE_README=]
  --disable-indexing(-I)                # Disable indexing [env: MINISERVE_DISABLE_INDEXING=]
  --help(-h)                            # Print help (see more with '--help')
  --version(-V)                         # Print version
]

